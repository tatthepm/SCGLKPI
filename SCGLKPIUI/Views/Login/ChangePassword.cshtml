@model BOL.TUser
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4><i class="fa fa-user-md"></i> Change password</h4>
<hr />
@if (TempData["Msg"] != null) {
    if (TempData["Msg"].ToString().Contains("Successfully")) {
        <div class="alert alert-dismissable alert-info">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <span style="font-size:small"> @TempData["Msg"].ToString()</span>
        </div>
    }
    else {
        <div class="alert alert-dismissable alert-danger">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <span style="font-size:small"> @TempData["Msg"].ToString()</span>
        </div>
    }
}

@using (Html.BeginForm("ChangePassword", "Login", new { oldPassword = ViewBag.OldPassword }, FormMethod.Post, new { @id = "myform", @name = "myform" })) {
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.UserEmail)
        @Html.HiddenFor(model => model.RoleId)
        @Html.HiddenFor(model => model.LastLogin)

        <div class="form-group">
            @Html.Label("Old password", null, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:medium" })
            <div class="col-md-4">
                @Html.TextBox("keyPassword", null, new { @class = "form-control", @placeholder = "Old password", @type = "password" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("New password", null, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:medium" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control ", @placeholder = "New password", @Value = "" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @style = "font-size:smaller" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Confirm new password", null, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:medium" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm new password", @Value = "" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", @style = "font-size:smaller" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-2"></div>
            <div class="col-md-2">
                <input type="submit" value="SAVE" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/validation/js")
    <script type="text/javascript">
        $(function () {

            $("#myform").validate({
                rules: {
                    Password: {
                        required: true,
                        minlength: 4
                    },
                    ConfirmPassword: {
                        required: true,
                        minlength: 4,
                        equalTo: "#Password"
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                }
            });
        });

    </script>

}

