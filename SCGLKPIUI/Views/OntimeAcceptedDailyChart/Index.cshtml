@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .chart-legend li span {
        display: inline-block;
        width: 12px;
        height: 12px;
        margin-right: 5px;
        list-style: none;
    }

    .chart-legend ul {
        list-style-type: none;
    }

    /* Green check. */
    .glyphicon-ok {
        color: green;
    }
    /* Red X. */
    .glyphicon-remove {
        color: red;
    }
</style>

<h4>
    <i class="fa fa-bar-chart"></i> Chart on-time accept tender | Daily
</h4>
@*filter by date*@
@Html.Partial("pv_FilterByDate")

@Html.Partial("pv_AcceptOntimeChartDaily")

@Html.Partial("pv_AcceptOntimeTableDaily")

<div>
    <div id="loading" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Loading...</h4>
                </div>
                <div class="modal-body">
                    @*<div class="progress progress-success">
                            <div class="progress-bar" style="width:100%"></div>
                        </div>*@
                    <div class="progress m-t-xs full progress-small">
                        <div style="width:100%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="100" role="progressbar" class="progress-bar progress-bar-striped active">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/datatables/css")
    @Styles.Render("~/bundles/xeditable/css")
    @Styles.Render("~/bundles/select2/css")
    @Styles.Render("~/bundles/touchspin/css")
    @Styles.Render("~/bundles/datepicker/css")
    @Styles.Render("~/bundles/bootstrapCheckbox/css")
    @Styles.Render("~/bundles/datetimepicker/css")
    @Styles.Render("~/bundles/clockpicker/css")
    @Styles.Render("~/bundles/sweetAlert/css")
    @Styles.Render("~/bundles/toastr/css")
    @Styles.Render("~/bundles/ladda/css")
    <link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/moment/js")
    @Scripts.Render("~/bundles/xeditable/js")
    @Scripts.Render("~/bundles/select2/js")
    @Scripts.Render("~/bundles/touchspin/js")
    @Scripts.Render("~/bundles/clockpicker/js")
    @Scripts.Render("~/bundles/chartjs/js")
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/datatablesPlugins/js")
    @Scripts.Render("~/bundles/sweetAlert/js")
    @Scripts.Render("~/bundles/toastr/js")
    @Scripts.Render("~/bundles/ladda/js")

    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script type="text/javascript">

        //created global object Then just before initializing the chart i destroyed
        var chartOntime;
        var chartOntimeAdj;
        var chartShipment;
        var pieChartOntime;
        //
        // show progress
        $(document).ajaxStart(function () {
            $("#loading").show();
        });

        $(document).ajaxStop(function () {
            $("#loading").hide();
        });
        //

        //#region 1 autocomplete dropdownlist
        $(".js-source-states").select2();
        //#endregion

        //#region 2 date time picker
        jQuery('#FromDateSearch').datetimepicker({
            format: 'Y/m/d',
            onShow: function (ct) {
                this.setOptions({
                    maxDate: jQuery('#ToDateSearch').val() ? jQuery('#ToDateSearch').val() : false
                })
            },
            timepicker: false
        });
        jQuery('#ToDateSearch').datetimepicker({
            format: 'Y/m/d',
            onShow: function (ct) {
                this.setOptions({
                    minDate: jQuery('#FromDateSearch').val() ? jQuery('#FromDateSearch').val() : false
                })
            },
            timepicker: false
        });
        //#endregion

        //#region 4 getJson Section
        $("#DepartmentId").change(function (res) {
            departmentId = $("#DepartmentId").val();
            $.getJSON('/OntimeAcceptedDailyChart/SectionFilter?departmentId=' + departmentId, function (data) {
                var ddl = $("#SectionId");
                // ddl.removeAttrs('disabled style');
                ddl.addClass('js-source-states');
                var string = '<option value="">ALL</option>';
                $.each(data, function (i, S) {
                    string += '<option value="' + S.Id + '">' + S.Name + '</option>'
                });
                ddl.html(string);
                ddl.select2('val', '');
            });
        });

        //#endregion

        //#region 5 getJson MatName
        $("#SectionId").change(function (res) {
            departmentId = $("#DepartmentId").val();
            sectionId = $("#SectionId").val();
            $.getJSON('/OntimeAcceptedDailyChart/MatNameFilter?departmentId=' + departmentId + '&sectionid=' + sectionId, function (data) {
                var ddl = $("#MatNameId");
                // ddl.removeAttrs('disabled style');
                ddl.addClass('js-source-states');
                var string = '<option value="">ALL</option>';
                $.each(data, function (i, S) {
                    string += '<option value="' + S.Id + '">' + S.Name + '</option>'
                });
                ddl.html(string);
                ddl.select2('val', '');
            });
        });

        //#endregion

        //#region 4 btnSearch button click
        $("#btnSearch").click(function () {
            var sdate = $('#FromDateSearch').val();
            var edate = $('#ToDateSearch').val();
            var day_start = new Date(sdate);
            var day_end = new Date(edate);
            var total_days = ((day_end - day_start) / (1000 * 60 * 60 * 24)) + 1;

            if (sdate == "" && edate == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, You must choose date in the calendar",
                    type: "warning"
                });
            }
            else if (total_days > 32) {
                swal({
                    title: "Warning!",
                    text: "Sorry!, you can not use duration more than 31 days",
                    type: "warning"
                });
            }
            else {
                var label = [];
                var plan = [];
                var actual = [];
                var adjust = [];
                var shipment = [];
                var planshipment = [];
                var departmentId = $('#DepartmentId').val();
                var sectionId = $('#SectionId').val();
                var matNameId = $('#MatNameId').val();

                var jsonString = $.getJSON('/OntimeAcceptedDailyChart/jsonData?DepartmentId=' + departmentId
                    + '&SectionId=' + sectionId
                    + '&FromDateSearch=' + sdate
                    + '&ToDateSearch=' + edate
                    + '&MatNameId=' + matNameId, function (data) {
                        // console.info(data);
                        $.each(data, function (index, item) {
                            
                            var date = item.ActualGiDate;
                            label.push(date);
                            plan.push(item.Plan);
                            actual.push(item.Actual);
                            adjust.push(item.Adjust);
                            shipment.push(item.SumOfAccept);
                            planshipment.push(item.SumOfAccept);
                        });
                        // console.info(label);

                        //#region 1 bar chart ontime accepted
                        var steps = 5;
                        var barOptions = {
                            scaleBeginAtZero: true,
                            scaleShowGridLines: true,
                            scaleGridLineColor: "rgba(0,0,0,.05)",
                            scaleGridLineWidth: 1,
                            barShowStroke: true,
                            barStrokeWidth: 2,
                            barValueSpacing: 5,
                            barDatasetSpacing: 1,
                            responsive: true,
                            //
                            scaleOverride: true,
                            scaleSteps: steps,
                            scaleStepWidth: Math.ceil(100 / steps),
                            scaleStartValue: 0
                            //
                        };
                        /**
                         * Data for Bar chart
                         */
                        var barData = {
                            labels: label, //["January", "February", "March", "April", "May"],
                            datasets: [
                                {
                                    label: "PLAN",
                                    fillColor: "rgba(220,220,220,0.5)",
                                    //strokeColor: "rgba(220,220,220,0.8)",
                                    strokeColor: 'rgba(0, 0, 0, 0.8)',
                                    highlightFill: "rgba(220,220,220,0.75)",
                                    //highlightStroke: "rgba(220,220,220,1)",
                                    highlightStroke: 'rgba(47, 132, 71, 0.8)',
                                    data: plan //[100, 100, 100, 100, 100],
                                },
                                {
                                    label: "ACTUAL",
                                    fillColor: "rgba(98,203,49,0.5)",
                                    strokeColor: "rgba(98,203,49,0.8)",
                                    highlightFill: "rgba(98,203,49,0.75)",
                                    highlightStroke: "rgba(98,203,49,1)",
                                    data: actual //[28, 48, 40, 19, 86],
                                }
                            ]
                        };

                        //Then just before initializing the chart i destroyed
                        if (chartOntime != undefined || chartOntime != null) {
                            chartOntime.destroy();
                        }

                        var ctx = document.getElementById("barOntimeAccept").getContext("2d");
                        //var myNewChart = new Chart(ctx).Bar(barData, barOptions);
                        chartOntime = new Chart(ctx, {
                            type: 'bar',
                            data: barData,
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                        }
                                    }]
                                }
                            }
                        });
                        //#endregion

                        //#region 2 bar chart ontime accepted adjust
                        /**
                      * Options for Bar chart
                      */
                        var steps = 5;
                        var barOptions = {
                            scaleBeginAtZero: true,
                            scaleShowGridLines: true,
                            scaleGridLineColor: "rgba(0,0,0,.05)",
                            scaleGridLineWidth: 1,
                            barShowStroke: true,
                            barStrokeWidth: 2,
                            barValueSpacing: 5,
                            barDatasetSpacing: 1,
                            responsive: true,
                            scaleOverride: true,
                            scaleSteps: steps,
                            scaleStepWidth: Math.ceil(100 / steps),
                            scaleStartValue: 0
                        };
                        /**
                         * Data for Bar chart
                         */
                        var barData = {
                            labels: label,
                            datasets: [
                                {
                                    label: "PLAN",
                                    fillColor: "rgba(220,220,220,0.5)",
                                    // strokeColor: "rgba(220,220,220,0.8)",
                                    strokeColor: 'rgba(47, 132, 71, 1.8)',
                                    highlightFill: "rgba(220,220,220,0.75)",
                                    highlightStroke: "rgba(220,220,220,1)",
                                    highlightStroke: 'rgba(47, 132, 71, 1.8)',
                                    data: plan //[100, 100, 100, 100, 100]
                                },
                                {
                                    label: "ACTUAL",
                                    fillColor: "rgba(98,203,49,0.5)",
                                    strokeColor: "rgba(98,203,49,0.8)",
                                    highlightFill: "rgba(98,203,49,0.75)",
                                    highlightStroke: "rgba(98,203,49,1)",
                                    data: adjust //[28, 48, 40, 19, 86]
                                }
                            ]
                        };

                        //Then just before initializing the chart i destroyed
                        if (chartOntimeAdj != undefined || chartOntimeAdj != null) {
                            chartOntimeAdj.destroy();
                        }

                        var ctx = document.getElementById("barOntimeAcceptAdjust").getContext("2d");
                        //var myNewChart = new Chart(ctx).Bar(barData, barOptions);
                        chartOntimeAdj = new Chart(ctx, {
                            type: 'bar',
                            data: barData,
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                        }
                                    }]
                                }
                            }
                        });
                        //#endregion

                    }); //end getJson

                //#endregion

                //#region table
                // on-time accept daliy dataTable
                var departmentId = $('#DepartmentId').val();
                var sectionId = $('#SectionId').val();
                var matNameId = $('#MatNameId').val();

                var acceptTender = $('#acceptTender').dataTable();
                acceptTender.fnDestroy();
                acceptTender.dataTable({
                    dom: "<'row'<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>tp",
                    "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    "ajax": {
                        "type": "POST",
                        "url": '@(Url.RouteUrl("OntimeAcceptDaily"))',
                        "data": function (d) {
                            d.DepartmentId = departmentId;
                            d.SectionId = sectionId;
                            d.matNameId = matNameId;
                            d.FromDateSearch = sdate;
                            d.ToDateSearch = edate;
                        },
                        "dataSrc": ""
                    },
                    columns: [
                   { data: "ActualGiDate" },
                   { data: "DepartmentName" },
                   { data: "SectionName" },
                   { data: "MatName" },
                   { data: "SumOfAccept" },
                   { data: "OnTime" },
                   { data: "Delay" },
                   { data: "AdjustAccept" },
                   { data: "Plan" },
                   { data: "Percent" },
                   { data: "PercentAdjust" },
                    ],
                    "columnDefs": [
                {
                    "render": function (data, type, row) {
                        return (row.PercentAdjust >= 98.0) ? '<img src="/Content/img/TrafficLight-Green-small50-18.png" />' : '<img src="/Content/img/TrafficLight-Red-small50-18.png" />'
                    },
                    "targets": 11
                }
                    ],
                    select: true,
                    buttons: [
                        { extend: 'copy', className: 'btn-sm' },
                        { extend: 'csv', title: 'On-time Accept Daily', className: 'btn-sm' },
                        { extend: 'excel', title: 'On-time Accept Daily', className: 'btn-sm' },
                    ]
                });

                // table summary
                //on-time accept summary daily
                var acceptSummaryTender = $('#acceptSummaryTender').dataTable();
                acceptSummaryTender.fnDestroy();
                acceptSummaryTender.dataTable({
                    dom: "<'row'<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>tp",
                    "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    "ajax": {
                        "type": "POST",
                        "url": '@(Url.RouteUrl("OntimeAcceptSummaryDaily"))',
                        "data": function (d) {
                            d.DepartmentId = departmentId;
                            d.SectionId = sectionId;
                            d.matNameId = matNameId;
                            d.FromDateSearch = sdate;
                            d.ToDateSearch = edate;
                        },
                        "dataSrc": ""
                    },
                    columns: [
                   { data: "DepartmentName" },
                   { data: "SectionName" },
                   { data: "SumOfAccept" },
                   { data: "OnTime" },
                   { data: "Delay" },
                   { data: "Adjust" },
                   { data: "Plan" },
                   { data: "Percent" },
                   { data: "PercentAdjust" }
                    ],
                    "columnDefs": [
                {
                    "render": function (data, type, row) {
                        return (row.PercentAdjust >= 98.0) ? '<img src="/Content/img/TrafficLight-Green-small50-18.png" />' : '<img src="/Content/img/TrafficLight-Red-small50-18.png" />'
                    },
                    "targets": 9
                }
                    ],
                    select: true,
                    buttons: [
                        { extend: 'copy', className: 'btn-sm' },
                        { extend: 'csv', title: 'On-time Accept Summary Daily', className: 'btn-sm' },
                        { extend: 'excel', title: 'On-time Accept Summary Daily', className: 'btn-sm' },
                    ]
                });
                //#enregion tagle
            } //end if else

        }); //end btnSerarch click

        //#endregion

        //#region Bind normal buttons

        $('.ladda-button').ladda('bind', { timeout: 2000 });

        // Bind progress buttons and simulate loading progress
        Ladda.bind('.progress-demo .ladda-button', {
            callback: function (instance) {
                var progress = 0;
                var interval = setInterval(function () {
                    progress = Math.min(progress + Math.random() * 0.1, 1);
                    instance.setProgress(progress);

                    if (progress === 1) {
                        instance.stop();
                        clearInterval(interval);
                    }
                }, 200);
            }
        });

        var l = $('.ladda-button-demo').ladda();
        l.click(function () {
            // Start loading
            l.ladda('start');

            // Timeout example
            // Do something in backend and then stop ladda
            setTimeout(function () {
                l.ladda('stop');
            }, 5000)
        });
        //#endregion

    </script>
}


