@model SCGLKPIUI.Models.Tendered.AdjustTenderedViewModels
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .chart-legend li span {
        display: inline-block;
        width: 12px;
        height: 12px;
        margin-right: 5px;
        list-style: none;
    }

    .chart-legend ul {
        list-style-type: none;
    }
</style>
<h4>
    <i class="fa fa-truck"></i> Adjust Tender | Monthly
</h4>

@*filter by month*@
@Html.Partial("pv_FilterSegmentByMonth")

@Html.Partial("pv_AdjustTendered")

@if (TempData["Msg"] != null)
{
    if (TempData["Msg"].ToString().Contains("Successfully"))
    {
        <div class="alert alert-dismissable alert-info">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <span style="font-size:small"> @TempData["Msg"].ToString()</span>
        </div>
    }
    else
    {
        <div class="alert alert-dismissable alert-danger">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <span style="font-size:small"> @TempData["Msg"].ToString()</span>
        </div>
    }
}

<div>
    <div id="loading" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Loading...</h4>
                </div>
                <div class="modal-body">
                    @*<div class="progress progress-success">
                            <div class="progress-bar" style="width:100%"></div>
                        </div>*@
                    <div class="progress m-t-xs full progress-small">
                        <div style="width:100%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="100" role="progressbar" class="progress-bar progress-bar-striped active">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <div id="massAdjust" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Upload Excel files.</h4>
                </div>
                <div class="modal-body">
                    <input id="massFiles" name="massFiles" type="file" multiple>
                    <input type="hidden" name="massUpload" value="fileUploaded">
                </div>
                <div class="modal-footer">
                    <input type="button" class="ladda-button btn btn-success" value="Close" onclick="jQuery('#massAdjust').hide();" />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div id="excelModal" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Export Excel file.</h4>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="col-xs-1">
                            <form action="/AdjustTendered/ExportExcel/" id="exportForm" method="post" name="exportForm">
                                <p id="excelBody"></p>
                                <input type="submit" class="ladda-button btn btn-success" value="Export" id="btnExcel" />
                            </form>
                        </div>
                        <div class="col-xs-2">
                            <p></p>
                            <input type="button" class="ladda-button btn btn-success" value="Close" id="closeModal" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/datatables/css")
    @Styles.Render("~/bundles/xeditable/css")
    @Styles.Render("~/bundles/select2/css")
    @Styles.Render("~/bundles/touchspin/css")
    @Styles.Render("~/bundles/datepicker/css")
    @Styles.Render("~/bundles/bootstrapCheckbox/css")
    @Styles.Render("~/bundles/datetimepicker/css")
    @Styles.Render("~/bundles/clockpicker/css")
    @Styles.Render("~/bundles/sweetAlert/css")
    @Styles.Render("~/bundles/toastr/css")
    @Styles.Render("~/bundles/ladda/css")
    <link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/moment/js")
    @Scripts.Render("~/bundles/xeditable/js")
    @Scripts.Render("~/bundles/select2/js")
    @Scripts.Render("~/bundles/touchspin/js")
    @Scripts.Render("~/bundles/clockpicker/js")
    @Scripts.Render("~/bundles/chartjs/js")
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/datatablesPlugins/js")
    @Scripts.Render("~/bundles/sweetAlert/js")
    @Scripts.Render("~/bundles/toastr/js")
    @Scripts.Render("~/bundles/ladda/js")
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script src="~/Scripts/fnReloadAjax.js"></script>

    <script>

        //created global object Then just before initializing the chart i destroyed
        var files;
        var chartOntime;
        var chartOntimeAdj;
        var chartShipment;
        var pieChartOntime;
        var reasonString;
        //
        // show progress
        $(document).ajaxStart(function () {
            $("#loading").show();
        });

        $(document).ajaxStop(function () {
            $("#loading").hide();
        });


        //#region 1 autocomplete dropdownlist
        $(".js-source-states").select2();
        //#endregion

        //#region 2 filter section
        //#endregion
        $('#massAdjust ').on('change', 'input[type="file"]', function (e) {
            files = event.target.files;
            var formdata = new FormData(); //FormData object
            //var fileName = $(this).parent().find("input[name='massUpload']").val();
            var r = confirm("กด OK เพื่อยืนยันการอัพโหลด");
            if (r == true) {
                for (i = 0; i < files.length; i++) {
                    //Appending each file to FormData object
                    formdata.append('massUpload.xlsx', files[i]);
                }
                //Creating an XMLHttpRequest and sending
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/AdjustTendered/UploadReason/');
                xhr.send(formdata);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        alert(xhr.responseText);
                    }
                }
            }
            else {
                alert("ยกเลิกการอัพโหลด");
            }
            $("#massAdjust").hide();
        });

        //#region 3 filter ShippingPoint,Shipto,TruckType
        $("#SegmentId").change(function (res) {
            segmentId = $("#SegmentId").val();
            $.getJSON('/AdjustTendered/ShiptoFilter?SegmentId=' + segmentId, function (data) {
                var ddl = $("#ShipTo");
                // ddl.removeAttrs('disabled style');
                ddl.addClass('js-source-states');
                var string = '<option value="">ALL</option>';
                $.each(data, function (i, S) {
                    string += '<option value="' + S.Id + '">' + S.Name + '</option>'
                });
                ddl.html(string);
                ddl.select2('val', '');
            });
            $.getJSON('/AdjustTendered/ShippingPointFilter?SegmentId=' + segmentId, function (data) {
                var ddl = $("#ShipPoint");
                // ddl.removeAttrs('disabled style');
                ddl.addClass('js-source-states');
                var string = '<option value="">ALL</option>';
                $.each(data, function (i, S) {
                    string += '<option value="' + S.Id + '">' + S.Name + '</option>'
                });
                ddl.html(string);
                ddl.select2('val', '');
            });
            $.getJSON('/AdjustTendered/truckTypeFilter?SegmentId=' + segmentId, function (data) {
                var ddl = $("#TruckType");
                // ddl.removeAttrs('disabled style');
                ddl.addClass('js-source-states');
                var string = '<option value="">ALL</option>';
                $.each(data, function (i, S) {
                    string += '<option value="' + S.Id + '">' + S.Name + '</option>'
                });
                ddl.html(string);
                ddl.select2('val', '');
            });
        });
        //#endregion

        $("#btnExcelModal").click(function () {
            if ($('#SegmentId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Segments is not selected ",
                    type: "warning"
                });
            }
            else if ($('#ShipPoint').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Shipping Point is not selected ",
                    type: "warning"
                });
            }
            else if ($('#YearId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Year is not selected ",
                    type: "warning"
                });
            } else if ($('#MonthId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Month is not selected ",
                    type: "warning"
                });
            }
            else {
                var segmentId = $('#SegmentId').val();
                var ShipPoint = $('#ShipPoint').val();
                var Shipto = $('#ShipTo').val();
                var TruckType = $('#TruckType').val();
                var yearId = $('#YearId').val();
                var monthId = $('#MonthId').val();

                $("#excelBody").append('<input type="hidden" name="monthId" value="' + monthId + '" />\n\
                <input type="hidden" name="yearId" value="' + yearId + '" />\n\
                <input type="hidden" name="segmentId" value="' + segmentId + '" />\n\
                <input type="hidden" name="ShipPoint" value="' + ShipPoint + '" />\n\
                <input type="hidden" name="ShipTo" value="' + ShipTo + '" />\n\
                <input type="hidden" name="TruckType" value="' + TruckType + '" />\n');
                $("#excelModal").show();
            }
        });

        $("#closeModal").click(function () {
            $("#excelModal").hide();
        });

        $("#btnMassUpload").click(function () {
            $("#massFiles").val('');
            $("#massAdjust").show();
        });
        //#region 4 getJson Section

        //#endregion
        $("#btnSearch").click(function () {
            //if ($('#DepartmentId').val() == "") {
            //    swal({
            //        title: "Warning!",
            //        text: "Sorry!, Department is not selected ",
            //        type: "warning"
            //    });
            //} else

            if ($('#SegmentId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Segments is not selected ",
                    type: "warning"
                });
            }
            else if ($('#ShipPoint').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Shipping Point is not selected ",
                    type: "warning"
                });
            }
            else if ($('#YearId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Year is not selected ",
                    type: "warning"
                });
            } else if ($('#MonthId').val() == "") {
                swal({
                    title: "Warning!",
                    text: "Sorry!, Month is not selected ",
                    type: "warning"
                });
            }
            else {
                loadDataTable();
            } //end if else

        }); //end btnSerarch click

        // Add events
        $('#adjustTenderedTable tbody').on('change', 'input[type="file"]', function (e) {
            files = event.target.files;
            var formdata = new FormData(); //FormData object
            var fileName = $(this).parent().find("input[name='fileName']").val();
            var r = confirm("กด OK เพื่อยืนยันการอัพโหลด");
            if (r == true) {
                for (i = 0; i < files.length; i++) {
                    //Appending each file to FormData object
                    formdata.append(fileName, files[i]);
                }
                //Creating an XMLHttpRequest and sending
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/AdjustTendered/Upload/');
                xhr.send(formdata);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        alert(xhr.responseText);
                    }
                }
            }
            else {
                alert("ยกเลิกการอัพโหลด");
            }
        });
        //#region 5 Bind normal buttons

        $('.ladda-button').ladda('bind', { timeout: 2000 });

        // Bind progress buttons and simulate loading progress
        Ladda.bind('.progress-demo .ladda-button', {
            callback: function (instance) {
                var progress = 0;
                var interval = setInterval(function () {
                    progress = Math.min(progress + Math.random() * 0.1, 1);
                    instance.setProgress(progress);

                    if (progress === 1) {
                        instance.stop();
                        clearInterval(interval);
                    }
                }, 200);
            }
        });

        var l = $('.ladda-button-demo').ladda();
        l.click(function () {
            // Start loading
            l.ladda('start');

            // Timeout example
            // Do something in backend and then stop ladda
            setTimeout(function () {
                l.ladda('stop');
            }, 5000)
        });
        //#endregion
        $(function () {

            $('#frm').on('submit', function (e) {

                e.preventDefault();

                $.ajax({
                    type: 'post',
                    url: '@Url.Action("UpdateTenderReason")',
                    data: $('form').serialize(),
                    success: function () {
                        //Start load table
                        alert('ทำการแก้ไขค่า KPI เรียบร้อย โปรดรอผู้จัดการอนุมัติ');
                        loadDataTable();
                    }
                });

            });

        });

        function loadDataTable() {
            $.getJSON('/AdjustTendered/ReasonFilter', function (data) {
                reasonString = '<td><select id="dynamic_select" name="dynamic_select">\n'
                reasonString += '<option value="">--SELECT--</option>\n';
                $.each(data, function (i, S) {
                    reasonString += '<option value="' + S.Id + '">' + S.Id + ' : ' + S.Name + '</option>\n'
                });
                reasonString += '</select></td>'
            });

            //#region table
            // on-time tender monthly dataTable
            var segmentId = $('#SegmentId').val();
            var yearId = $('#YearId').val();
            var monthId = $('#MonthId').val();

            var ShipPoint = $('#ShipPoint').val();
            var ShipTo = $('#ShipTo').val();
            var TruckType = $('#TruckType').val();

            var adjustTender = $('#adjustTenderedTable').dataTable();
            adjustTender.fnDestroy();
            adjustTender.dataTable({
                dom: "<'row'<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>tp",
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "ajax": {
                    "type": "POST",
                    "url": '@(Url.RouteUrl("JsonAdjustTenderTable"))',
                    "data": function (d) {
                        //d.departmentId = departmentId;
                        //d.sectionId = sectionId;
                        //d.matNameId = matNameId;
                        d.segmentId = segmentId;
                        d.YearId = yearId;
                        d.MonthId = monthId;
                        d.ShipPoint = ShipPoint;
                        d.ShipTo = ShipTo;
                        d.TruckType = TruckType;
                    },
                    "dataSrc": ""
                },
                columns: [
               { data: "Shipment" },
               { data: "RegionName" },
               { data: "SoldtoName" },
               { data: "ShiptoName" },
               { data: "ShcrDate" },
               { data: "PlanTender" },
               { data: "FirstTender" },
               { data: "ShippingPoint" },
               { data: "CarrierId" },
               { data: "TruckType" },
                ],
                "columnDefs": [
                            {
                                "mRender": function (data, type, full) {
                                    return reasonString;
                                },
                                "targets": 10
                            },
                            {
                                "targets": 11,
                                "data": function (row, type, val, meta) {
                                    return '<input name="fileInput" type="file" multiple>\n\
                                            <input type="hidden" name="fileName" value="' + row.Shipment + '">';
                                }
                            },
                            {
                                "targets": 12,
                                "data": function (row, type, val, meta) {
                                    return '<input type="text" name="txtRemark" />\n\
                                            <input type="hidden" name="txtSM" value="' + row.Shipment + '">';
                                }
                            }
                ],
                select: true,
                buttons: [
                    { extend: 'copy', className: 'btn-sm' },
                    { extend: 'csv', title: 'ExampleFile', className: 'btn-sm' },
                    { extend: 'excel', title: 'ExampleFile', className: 'btn-sm' },
                ]
            });
        }
    </script>
}