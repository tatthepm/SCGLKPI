@using SCGLKPIUI.Models
@{
    IEnumerable<AcceptOntimeSummaryViewModels> summaryAccept = ViewBag.SummaryAccept;
}

<div class="content animate-panel">
    <div class="row">
        <div class="col-lg-12">
            <div class="hpanel">
                <div class="panel-heading">
                    <div class="panel-tools">
                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                        <a class="closebox"><i class="fa fa-times"></i></a>
                    </div>
                    <b>SUMMARY TABLE </b>[ Startdate: @ViewBag.Startdate - Enddate : @ViewBag.Enddate
                    |MatName: @ViewBag.MatName ]
                </div>
                <div class="panel-body">
                    <div class="table-responsive">
                        @*<table id="acceptSummary" class="table table-striped table-bordered table-hover">*@
                        <table id="acceptSummary" class="table table-bordered">
                            <thead>
                                <tr style="text-align:center">
                                    <th>DEMARTMENT</th>
                                    <th>SECTION</th>
                                    <th>SUM OF ACCEPT</th>
                                    <th>ON TIME</th>
                                    <th>DELAY</th>
                                    <th>ADJUST</th>
                                    <th>%ACCEPT</th>
                                    <th>%ADJUST</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ string FirstDept = "";
                                    string SecondDept = "";
                                    int totalAccept = 0;
                                    int totalDelay = 0;
                                    int totalOntime = 0;
                                    int totalAdjust = 0;
                                    double totalPercent = 0.0;
                                    double totalPercentAdjust = 0.0;}
                                @foreach (var item in summaryAccept) {
                                    FirstDept = item.DepartmentName;
                                    if (FirstDept != SecondDept) {
                                        var q = (from c in summaryAccept
                                                 where c.DepartmentName == item.DepartmentName
                                                 select c).Distinct();
                                        totalAccept = q.Sum(x => x.SumOfAccept);
                                        totalDelay = q.Sum(x => x.Delay);
                                        totalOntime = q.Sum(x => x.OnTime);
                                        totalAdjust = q.Sum(x => x.Adjust);
                                        totalPercent = (double)totalOntime / (double)totalAccept * 100;
                                        totalPercentAdjust = ((double)totalOntime + (double)totalAdjust) / totalAccept * 100;

                                        foreach (var item2 in q) {
                                            SecondDept = item2.DepartmentName;
                                            <tr style="text-align:center">
                                                <td>@item2.DepartmentName</td>
                                                <td>@item2.SectionName</td>
                                                <td>@String.Format("{0:n0}", item2.SumOfAccept)</td>
                                                <td>@String.Format("{0:n0}", item2.OnTime)</td>
                                                <td>@String.Format("{0:n0}", item2.Delay)</td>
                                                <td>@String.Format("{0:n0}", item2.Adjust)</td>
                                                <td>@String.Format("{0:n2}", item2.Percent)%</td>
                                                <td>@String.Format("{0:n2}", item2.PercentAdjust)%</td>
                                            </tr>
                                        }
                                        <tr style="text-align:center">
                                            <td align="right"><b>SubTotal @SecondDept</b></td>
                                            <td></td>
                                            <td><b>@String.Format("{0:n0}", totalAccept)</b></td>
                                            <td><b>@String.Format("{0:n0}", totalOntime)</b></td>
                                            <td><b>@String.Format("{0:n0}", totalDelay)</b></td>
                                            <td><b>@String.Format("{0:n0}", totalAdjust)</b></td>
                                            <td><b>@String.Format("{0:n2}", totalPercent)%</b></td>
                                            <td><b>@String.Format("{0:n2}", totalPercentAdjust)%</b></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var makeTableValidObject = {

        };

    </script>
}
